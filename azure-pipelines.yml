trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- name: buildConfiguration
  value: 'Release'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

# Add testing steps for the .NET Core app
- script: dotnet test --configuration $(buildConfiguration) --no-build
  displayName: 'Test .NET Core App'

- task: DownloadSecureFile@1
  name: envFile
  inputs:
    secureFile: '.env.production.logins'
- script: |
    cp $(envFile.secureFilePath) Fitlance/ClientApp/.env.production
  displayName: 'Copy secure file to React app directory'

# Setup Node.js for React app build
- task: NodeTool@0
  inputs:
    versionSpec: '14.x' 
  displayName: 'Install Node.js'

# Install npm dependencies and build React app
- script: |
    cd Fitlance/ClientApp
    npm install
    npm run build
  displayName: 'Build React app'
  env:
    NODE_ENV: production

# Run React app tests
#- script: |
#    cd Fitlance/ClientApp
#    npm test
#  displayName: 'Test React app'

# Publish Artifacts
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'
    zipAfterPublish: true
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/publish'
    ArtifactName: 'publish'
    publishLocation: 'Container'